Bootstrap: docker
From: ubuntu:22.04

%post
    # Install Git
    apt-get update && apt-get upgrade -y && apt-get install -y build-essential make cmake curl git

    # Install Conda
    curl -O https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
    bash Miniconda3-latest-Linux-x86_64.sh -b -p /opt/conda
    rm Miniconda3-latest-Linux-x86_64.sh
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc
    . /opt/conda/etc/profile.d/conda.sh

    # downloading GCparagon
    mkdir /opt/github && cd /opt/github
    git clone -b main --single-branch https://github.com/BGSpiegl/GCparagon.git && cd GCparagon
    # to prevent CondaToSNonInteractiveError (channel terms and service cannot be accepted in non-interactive mode)
    conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/main
    conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/r
    # actually create env
    conda env create -f conda_env/GCparagon_py3.10_env.yml -y
    conda activate GCparagon
    two_bit_ref_url_hg38="https://hgdownload.soe.ucsc.edu/goldenPath/hg38/bigZips/analysisSet/hg38.analysisSet.2bit"
    two_bit_ref_url_hg19="https://hgdownload.soe.ucsc.edu/goldenPath/hg19/bigZips/hg19.2bit"
    cd src/GCparagon/2bit_reference/
    curl -O "${two_bit_ref_url_hg38}"
    curl -O "${two_bit_ref_url_hg19}"

#%environment
#    export PATH=/opt/conda/bin:$PATH

%runscript
    . /opt/conda/etc/profile.d/conda.sh
    conda activate GCparagon
    python3 /opt/github/GCparagon/src/GCparagon/correct_GC_bias.py "$@"